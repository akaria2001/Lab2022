---
- name: Setup Lab
  hosts: lab
  serial: 2
  become: true
  ignore_unreachable: true
  ignore_errors: true
  tasks:
    - name: Ensure firewalld is at the latest version
      ansible.builtin.yum:
        name: firewalld
        state: present
      when: ansible_distribution == 'Rocky' or ansible_distribution == 'AlmaLinux' or ansible_distribution == 'CentOS'
    - name: Open firewall port for nrpe
      ansible.posix.firewalld:
        port: 5666/tcp
        immediate: true
        permanent: true
        state: enabled
      when: ansible_distribution == 'Rocky' or ansible_distribution == 'AlmaLinux' or ansible_distribution == 'CentOS'
    - name: Disable firewalld Zone Drifting
      ansible.builtin.replace:
        path: /etc/firewalld/firewalld.conf
        regexp: 'AllowZoneDrifting=yes'
        replace: 'AllowZoneDrifting=no'
        backup: true
      when: ansible_distribution == 'Rocky' or ansible_distribution == 'AlmaLinux' or ansible_distribution == 'CentOS'
      notify:
        - Restart firewalld
    - name: Further lockdown - in future iteration this will be handled via Proxmox cloud-init bootstrap process
      ansible.builtin.replace:
        path: /etc/ssh/sshd_config
        regexp: '^PermitRootLogin yes$'
        replace: 'PermitRootLogin no'
        backup: true
      when: ansible_distribution == 'Rocky' or ansible_distribution == 'AlmaLinux' or ansible_distribution == 'CentOS'
      notify:
        - Restart sshd
    - name: Ensure firewalld is running
      ansible.builtin.service:
        name: firewalld
        state: started
      when: ansible_distribution == 'Rocky' or ansible_distribution == 'AlmaLinux' or ansible_distribution == 'CentOS'
    - name: Install snapd
      ansible.builtin.apt:
        name: snapd
        state: present
      when: ansible_distribution == 'Ubuntu'
    - name: Install vim using apt
      ansible.builtin.apt:
        name: vim
        state: present
      when: ansible_distribution == 'Ubuntu'
    - name: Install emacs-nox using apt
      ansible.builtin.apt:
        name: emacs-nox
        state: present
      when: ansible_distribution == 'Ubuntu'
    - name: Install QEMU Guest Agent
      ansible.builtin.yum:
        name: qemu-guest-agent
        state: present
      when: >
        (ansible_distribution == 'Rocky' or ansible_distribution == 'AlmaLinux' or ansible_distribution == 'CentOS') and
        ansible_virtualization_role == 'guest'
    - name: UnInstall QEMU Guest Agent if present on Physical host
      ansible.builtin.yum:
        name: qemu-guest-agent
        state: absent
      when: >
        (ansible_distribution == 'Rocky' or ansible_distribution == 'AlmaLinux' or ansible_distribution == 'CentOS') and
        ansible_virtualization_role == 'host'
    - name: Enable QEMU Guest Agent
      ansible.builtin.service:
        name: qemu-guest-agent
        enabled: true
      when: >
        (ansible_distribution == 'Rocky' or ansible_distribution == 'AlmaLinux' or ansible_distribution == 'CentOS') and
        ansible_virtualization_role == 'guest'
      notify:
        - Restart QEMU Agent
    - name: Install vim using dnf
      ansible.builtin.yum:
        name: vim
        state: present
      when: ansible_distribution == 'Rocky' or ansible_distribution == 'AlmaLinux' or ansible_distribution == 'CentOS'
    - name: Install emacs-nox using dnf
      ansible.builtin.yum:
        name: emacs-nox
        state: present
      when: ansible_distribution == 'Rocky' or ansible_distribution == 'AlmaLinux' or ansible_distribution == 'CentOS'
    - name: Install less using dnf
      ansible.builtin.yum:
        name: less
        state: present
      when: ansible_distribution == 'Rocky' or ansible_distribution == 'AlmaLinux' or ansible_distribution == 'CentOS'
    - name: Install epel using dnf
      ansible.builtin.yum:
        name: epel-release
        state: present
      when: ansible_distribution == 'Rocky' or ansible_distribution == 'AlmaLinux' or ansible_distribution == 'CentOS'
    - name: Install nagios common using dnf
      ansible.builtin.yum:
        name: nagios-common
        state: present
      when: ansible_distribution == 'Rocky' or ansible_distribution == 'AlmaLinux' or ansible_distribution == 'CentOS'
    - name: Install nagios nrpe using dnf
      ansible.builtin.yum:
        name: nrpe
        state: present
      when: ansible_distribution == 'Rocky' or ansible_distribution == 'AlmaLinux' or ansible_distribution == 'CentOS'
    - name: Install nagios plugins nrpe using dnf
      ansible.builtin.yum:
        name: nagios-plugins-nrpe
        state: present
      when: ansible_distribution == 'Rocky' or ansible_distribution == 'AlmaLinux' or ansible_distribution == 'CentOS'
    - name: Install nagios plugins proc using dnf
      ansible.builtin.yum:
        name: nagios-plugins-procs
        state: present
      when: ansible_distribution == 'Rocky' or ansible_distribution == 'AlmaLinux' or ansible_distribution == 'CentOS'
    - name: Install nagios plugins users using dnf
      ansible.builtin.yum:
        name: nagios-plugins-users
        state: present
      when: ansible_distribution == 'Rocky' or ansible_distribution == 'AlmaLinux' or ansible_distribution == 'CentOS'
    - name: Install nagios plugins load using dnf
      ansible.builtin.yum:
        name: nagios-plugins-load
        state: present
      when: ansible_distribution == 'Rocky' or ansible_distribution == 'AlmaLinux' or ansible_distribution == 'CentOS'
      notify:
        - Restart NRPE
    - name: Pause for 10 seconds
      ansible.builtin.pause:
        seconds: 10
      when: ansible_distribution == 'Rocky' or ansible_distribution == 'AlmaLinux' or ansible_distribution == 'CentOS'
  handlers:
    - name: Restart firewalld
      ansible.builtin.service:
        name: firewalld
        state: restarted
      when: ansible_distribution == 'Rocky' or ansible_distribution == 'AlmaLinux' or ansible_distribution == 'CentOS'
    - name: Restart sshd
      ansible.builtin.service:
        name: sshd
        state: restarted
      when: ansible_distribution == 'Rocky' or ansible_distribution == 'AlmaLinux' or ansible_distribution == 'CentOS'
    - name: Restart QEMU Agent
      ansible.builtin.service:
        name: qemu-guest-agent
        state: restarted
      when: ansible_distribution == 'Rocky' or ansible_distribution == 'AlmaLinux' or ansible_distribution == 'CentOS'
    - name: Restart NRPE
      ansible.builtin.service:
        name: nrpe
        state: restarted
      when: ansible_distribution == 'Rocky' or ansible_distribution == 'AlmaLinux' or ansible_distribution == 'CentOS'
