---
- name: Setup Lab
  hosts: lab
  serial: 2
  become: true
  ignore_unreachable: true
  ignore_errors: true
  tasks:
    - name: Disable RFC1323/RFC7323
      ansible.builtin.lineinfile:
        path: /etc/sysctl.conf
        line: 'net.ipv4.tcp_timestamps = 0'
      when: ansible_distribution_file_variety == 'RedHat'
      notify:
        - Reboot Host
    - name: Ensure firewalld is at the latest version
      ansible.builtin.yum:
        name: firewalld
        state: present
      when: ansible_distribution == 'Rocky' or ansible_distribution == 'AlmaLinux' or ansible_distribution == 'CentOS'
    - name: Disable firewalld Zone Drifting
      ansible.builtin.replace:
        path: /etc/firewalld/firewalld.conf
        regexp: 'AllowZoneDrifting=yes'
        replace: 'AllowZoneDrifting=no'
        backup: true
      when: ansible_distribution == 'Rocky' or ansible_distribution == 'AlmaLinux' or ansible_distribution == 'CentOS'
      notify:
        - Restart firewalld
    - name: Check Kernel Release
      ansible.builtin.shell: uname -r
      register: uname_cmd
    - name: Work around for WSL kernel to use iptables backend for firewalld
      ansible.builtin.replace:
        path: /etc/firewalld/firewalld.conf
        regexp: 'nftables'
        replace: 'iptables'
      when: ansible_distribution_file_variety == 'RedHat' and uname_cmd.stdout.find('microsoft') !=1
      notify:
        - Restart firewalld
    - name: Further lockdown - in future iteration this will be handled via Proxmox cloud-init bootstrap process
      ansible.builtin.replace:
        path: /etc/ssh/sshd_config
        regexp: '^PermitRootLogin yes$'
        replace: 'PermitRootLogin no'
        backup: true
      when: ansible_distribution == 'Rocky' or ansible_distribution == 'AlmaLinux' or ansible_distribution == 'CentOS'
      notify:
        - Restart sshd
    - name: Ensure firewalld is running
      ansible.builtin.service:
        name: firewalld
        state: started
      when: ansible_distribution == 'Rocky' or ansible_distribution == 'AlmaLinux' or ansible_distribution == 'CentOS'
    - name: Install snapd
      ansible.builtin.apt:
        name: snapd
        state: present
      when: ansible_distribution == 'Ubuntu'
    - name: Modernize apt sources on Debian 13
      ansible.builtin.command: 'apt modernize-sources -y'
      when: ansible_distribution == 'Debian' and ansible_distribution_major_version == '13'
    - name: Install vim using apt
      ansible.builtin.apt:
        name: vim
        state: present
      when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'
    - name: Install emacs-nox using apt
      ansible.builtin.apt:
        name: emacs-nox
        state: present
      when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'
    - name: Install QEMU Guest Agent
      ansible.builtin.yum:
        name: qemu-guest-agent
        state: present
      when: >
        (ansible_distribution == 'Rocky' or ansible_distribution == 'AlmaLinux' or ansible_distribution == 'CentOS') and
        ansible_virtualization_role == 'guest'
    - name: Install QEMU Guest Agent Ubunutu and Debian
      ansible.builtin.apt:
        name: qemu-guest-agent
        state: present
      when: >
        (ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian') and
        ansible_virtualization_role == 'guest'
    - name: UnInstall QEMU Guest Agent if present on Physical host
      ansible.builtin.yum:
        name: qemu-guest-agent
        state: absent
      when: >
        (ansible_distribution == 'Rocky' or ansible_distribution == 'AlmaLinux' or ansible_distribution == 'CentOS') and
        ansible_virtualization_role == 'host'
    - name: Enable QEMU Guest Agent
      ansible.builtin.service:
        name: qemu-guest-agent
        enabled: true
      when: >
        (ansible_distribution == 'Rocky' or ansible_distribution == 'AlmaLinux' or ansible_distribution == 'CentOS' or
        ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian') and
        ansible_virtualization_role == 'guest'
      notify:
        - Restart QEMU Agent
    - name: Check Inode Usage and report to /var/log - Cron Job Example via Ansible - will modify this in future to use own custom polling scripts
      ansible.builtin.cron:
        name: "check inodes"
        minute: "50"
        hour: "*"
        job: "df -i / >> /var/log/inode-check-via-cron.log"
      when: >
        (ansible_distribution == 'Rocky' or ansible_distribution == 'AlmaLinux' or ansible_distribution == 'CentOS' or
        ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian') and
        ansible_virtualization_role == 'guest'
    - name: Install vim using dnf
      ansible.builtin.yum:
        name: vim
        state: present
      when: ansible_distribution == 'Rocky' or ansible_distribution == 'AlmaLinux' or ansible_distribution == 'CentOS'
    - name: Install wget using dnf
      ansible.builtin.yum:
        name: wget
        state: present
      when: ansible_distribution == 'Rocky' or ansible_distribution == 'AlmaLinux' or ansible_distribution == 'CentOS'
    - name: Install tar using dnf
      ansible.builtin.yum:
        name: tar
        state: present
      when: ansible_distribution == 'Rocky' or ansible_distribution == 'AlmaLinux' or ansible_distribution == 'CentOS'
    - name: Install emacs-nox using dnf
      ansible.builtin.yum:
        name: emacs-nox
        state: present
      when: ansible_distribution == 'Rocky' or ansible_distribution == 'AlmaLinux' or ansible_distribution == 'CentOS'
    - name: Install less using dnf
      ansible.builtin.yum:
        name: less
        state: present
      when: ansible_distribution == 'Rocky' or ansible_distribution == 'AlmaLinux' or ansible_distribution == 'CentOS'
    - name: Install epel using dnf
      ansible.builtin.yum:
        name: epel-release
        state: present
      when: ansible_distribution == 'Rocky' or ansible_distribution == 'AlmaLinux' or ansible_distribution == 'CentOS'
    - name: Install net-tools using dnf
      ansible.builtin.yum:
        name: net-tools
        state: present
      when: ansible_distribution == 'Rocky' or ansible_distribution == 'AlmaLinux' or ansible_distribution == 'CentOS'
    - name: Pause for 10 seconds
      ansible.builtin.pause:
        seconds: 10
      when: ansible_distribution == 'Rocky' or ansible_distribution == 'AlmaLinux' or ansible_distribution == 'CentOS'
  handlers:
    - name: Reboot Host
      ansible.builtin.reboot:
      when: ansible_distribution == 'Rocky' or ansible_distribution == 'AlmaLinux' or ansible_distribution == 'CentOS'
    - name: Restart firewalld
      ansible.builtin.service:
        name: firewalld
        state: restarted
      when: ansible_distribution == 'Rocky' or ansible_distribution == 'AlmaLinux' or ansible_distribution == 'CentOS'
    - name: Restart sshd
      ansible.builtin.service:
        name: sshd
        state: restarted
      when: ansible_distribution == 'Rocky' or ansible_distribution == 'AlmaLinux' or ansible_distribution == 'CentOS'
    - name: Restart QEMU Agent
      ansible.builtin.service:
        name: qemu-guest-agent
        state: restarted
      when: >
        (ansible_distribution == 'Rocky' or ansible_distribution == 'AlmaLinux' or ansible_distribution == 'CentOS' or
        ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian') and
        ansible_virtualization_role == 'guest'
